#!/bin/bash

VERSION="0.1.0"

#%MIRUP_ROOT%
MIRUP_ROOT=${MIRUP_ROOT-"."}
ANSIBLE_NOCOWS=1

usage()
{
    cat >&2 <<EOF
NAME

  mirup - Git repos updater.

SYNOPSIS

  mirup [-h] [-v] [-l] [-d]

DESCRIPTION

  Updates repository REPO in given OUTPUT directory. Both parameters
  should be fed from the standard input in the following format:

  REPO OUTPUT\n

OPTIONS

  -h  Display this help dialog.
  -d  Debug mode.
  -l  Print extra information.
  -v  Print current version.

EXAMPLES

    \$ tail -f /tmp/input | mirup

EOF
}

VERBOSE=/dev/null

while getopts "r:o:lhv" OPTION; do
    case $OPTION in
        h)
            usage
            exit 0
            ;;
        v)
            echo "mirup v$VERSION $(uname -mo)"
            exit 0
            ;;
        d)
            echo "INFO: Debug mode enabled" >&2
            DEBUG=" -d"
            ;;
        l)
            echo "INFO: Running verbose" >&2
            VERBOSE=/dev/stderr
            ;;
        ?|*)
            usage
            exit 1
            ;;
    esac
done

read repo dest

if test x$repo = x || test x$dest = x ; then
    echo "ERROR: Invalid input!" >&2
    exit 1
fi

ansible-playbook$DEBUG -c local -e "repo_name=$repo repo_dest=$dest" \
    -s -i $MIRUP_ROOT/local $MIRUP_ROOT/up.yml >$VERBOSE

if test x$? = x0 ; then
    echo "INFO: Repository '$repo' has been updated in '$dest'"
else
    echo "ERROR: Couldn't update '$repo' in '$dest'" >&2
    exit 1
fi
